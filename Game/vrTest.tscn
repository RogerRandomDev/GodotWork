[gd_scene load_steps=41 format=2]

[ext_resource path="res://Assets/Vr/Models/console.tscn" type="PackedScene" id=1]
[ext_resource path="res://Assets/Vr/Models/tv.tscn" type="PackedScene" id=2]
[ext_resource path="res://Assets/Vr/Models/table.tscn" type="PackedScene" id=3]
[ext_resource path="res://vr.gd" type="Script" id=4]
[ext_resource path="res://Assets/Vr/Models/sofa.tscn" type="PackedScene" id=5]
[ext_resource path="res://Assets/Textures/controls.png" type="Texture" id=6]
[ext_resource path="res://Assets/Vr/Models/frame.tscn" type="PackedScene" id=7]
[ext_resource path="res://Assets/Textures/vr/poster0.jpg" type="Texture" id=8]
[ext_resource path="res://Assets/Textures/vr/poster1.jpg" type="Texture" id=9]
[ext_resource path="res://Assets/Textures/vr/poster2.jpg" type="Texture" id=10]
[ext_resource path="res://viewport.gd" type="Script" id=11]
[ext_resource path="res://vrTest.gd" type="Script" id=12]
[ext_resource path="res://rcont.gd" type="Script" id=13]
[ext_resource path="res://lcont.gd" type="Script" id=14]
[ext_resource path="res://addons/godot_ovrmobile/example_scenes/touch_controller.dae" type="PackedScene" id=15]
[ext_resource path="res://Assets/Vr/Models/shelf.tscn" type="PackedScene" id=16]
[ext_resource path="res://Assets/Vr/Models/room.tscn" type="PackedScene" id=17]

[sub_resource type="ProceduralSky" id=1]
radiance_size = 0
sky_top_color = Color( 1, 1, 1, 1 )
sky_horizon_color = Color( 1, 1, 1, 1 )

[sub_resource type="Environment" id=2]
background_sky = SubResource( 1 )
background_color = Color( 1, 1, 1, 1 )
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_energy = 0.13

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=4]
uniform_name = "view"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 1, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=6]
function = 6

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
output_port_for_preview = 0
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=8]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=9]

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorCompose" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 0.125 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=13]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]
output_port_for_preview = 1

[sub_resource type="VisualShaderNodeVectorOp" id=15]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3.14159, 3.14159, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
output_port_for_preview = 0
function = 1

[sub_resource type="VisualShaderNodeVectorOp" id=18]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
output_port_for_preview = 0
function = 12

[sub_resource type="VisualShader" id=20]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D view;



void vertex() {
// Input:13
	vec3 n_out13p0 = VERTEX;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:8
	vec3 n_in8p1 = vec3(0.50000, 0.00000, 0.00000);
	vec3 n_out8p0 = n_out2p0 - n_in8p1;

// VectorOp:5
	vec3 n_in5p1 = vec3(3.14159, 3.14159, 0.00000);
	vec3 n_out5p0 = n_out8p0 * n_in5p1;

// VectorDecompose:4
	float n_out4p0 = n_out5p0.x;
	float n_out4p1 = n_out5p0.y;
	float n_out4p2 = n_out5p0.z;

// ScalarFunc:7
	float n_out7p0 = cos(n_out4p0);

// ScalarFunc:10
	float n_out10p0 = abs(n_out7p0);

// ScalarFunc:6
	float n_out6p0 = sin(n_out4p1);

// ScalarFunc:9
	float n_out9p0 = abs(n_out6p0);

// ScalarOp:11
	float n_out11p0 = n_out10p0 * n_out9p0;

// ScalarOp:15
	float n_in15p1 = 0.12500;
	float n_out15p0 = n_out11p0 * n_in15p1;

// VectorCompose:14
	float n_in14p0 = 0.00000;
	float n_in14p2 = 0.00000;
	vec3 n_out14p0 = vec3(n_in14p0, n_out15p0, n_in14p2);

// VectorOp:12
	vec3 n_out12p0 = n_out13p0 + n_out14p0;

// Output:0
	VERTEX = n_out12p0;

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorOp:6
	vec3 n_in6p0 = vec3(1.00000, 0.00000, 0.00000);
	vec3 n_out6p0 = n_in6p0 - n_out4p0;

// VectorFunc:7
	vec3 n_out7p0 = abs(n_out6p0);

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(view, n_out7p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
nodes/vertex/0/position = Vector2( 1020, 240 )
nodes/vertex/2/node = SubResource( 13 )
nodes/vertex/2/position = Vector2( -360, 100 )
nodes/vertex/4/node = SubResource( 14 )
nodes/vertex/4/position = Vector2( -160, 300 )
nodes/vertex/5/node = SubResource( 15 )
nodes/vertex/5/position = Vector2( 80, 100 )
nodes/vertex/6/node = SubResource( 16 )
nodes/vertex/6/position = Vector2( 100, 300 )
nodes/vertex/7/node = SubResource( 17 )
nodes/vertex/7/position = Vector2( 100, 460 )
nodes/vertex/8/node = SubResource( 18 )
nodes/vertex/8/position = Vector2( -180, 120 )
nodes/vertex/9/node = SubResource( 19 )
nodes/vertex/9/position = Vector2( 260, 300 )
nodes/vertex/10/node = SubResource( 7 )
nodes/vertex/10/position = Vector2( 280, 480 )
nodes/vertex/11/node = SubResource( 8 )
nodes/vertex/11/position = Vector2( 480, 400 )
nodes/vertex/12/node = SubResource( 9 )
nodes/vertex/12/position = Vector2( 720, 200 )
nodes/vertex/13/node = SubResource( 10 )
nodes/vertex/13/position = Vector2( 452.861, 186.638 )
nodes/vertex/14/node = SubResource( 11 )
nodes/vertex/14/position = Vector2( 500, 300 )
nodes/vertex/15/node = SubResource( 12 )
nodes/vertex/15/position = Vector2( 669.992, 455 )
nodes/vertex/connections = PoolIntArray( 5, 0, 4, 0, 4, 1, 6, 0, 4, 0, 7, 0, 2, 0, 8, 0, 8, 0, 5, 0, 6, 0, 9, 0, 7, 0, 10, 0, 10, 0, 11, 0, 9, 0, 11, 1, 13, 0, 12, 0, 14, 0, 12, 1, 12, 0, 0, 0, 11, 0, 15, 0, 15, 0, 14, 1 )
nodes/fragment/0/position = Vector2( 700, 140 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 0, 200 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 400, 140 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 0, 300 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 180, 300 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 6, 0, 7, 0, 4, 0, 6, 1, 7, 0, 5, 0 )

[sub_resource type="ViewportTexture" id=21]
flags = 64
viewport_path = NodePath("Spatial/ViewportContainer/Viewport")

[sub_resource type="ShaderMaterial" id=22]
resource_local_to_scene = true
shader = SubResource( 20 )
shader_param/view = SubResource( 21 )

[sub_resource type="PlaneMesh" id=23]
size = Vector2( 1.65, 1.65 )
subdivide_width = 4
subdivide_depth = 4

[node name="Node2D" type="Node2D"]
pause_mode = 2
script = ExtResource( 12 )

[node name="Spatial" type="Spatial" parent="."]
script = ExtResource( 4 )

[node name="ViewportContainer" type="ViewportContainer" parent="Spatial"]
pause_mode = 1
process_priority = -1
self_modulate = Color( 1, 1, 1, 0 )
margin_right = 1024.0
margin_bottom = 600.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="Spatial/ViewportContainer" groups=[
"VIEWPORT",
]]
process_priority = -2
size = Vector2( 1024, 600 )
transparent_bg = true
handle_input_locally = false
msaa = 5
usage = 0
render_target_update_mode = 3
audio_listener_enable_2d = true
script = ExtResource( 11 )

[node name="ARVROrigin" type="ARVROrigin" parent="Spatial"]
pause_mode = 2
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.1, -0.6, -2.8 )
__meta__ = {
"_edit_group_": true
}

[node name="ARVRCamera" type="ARVRCamera" parent="Spatial/ARVROrigin"]
pause_mode = 2
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.6, 0 )
environment = SubResource( 2 )
doppler_tracking = 2
current = true

[node name="RController" type="ARVRController" parent="Spatial/ARVROrigin"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.3, 0, 0 )
controller_id = 2
script = ExtResource( 13 )

[node name="touch_controller2" parent="Spatial/ARVROrigin/RController" instance=ExtResource( 15 )]
transform = Transform( 1, 0, 3.89414e-07, 0, 1, 0, 3.89414e-07, 0, -1, 0, 0, 0 )

[node name="LController" type="ARVRController" parent="Spatial/ARVROrigin"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.3, 0, 0 )
script = ExtResource( 14 )

[node name="touch_controller" parent="Spatial/ARVROrigin/LController" instance=ExtResource( 15 )]
transform = Transform( -1, 0, 2.78142e-07, 0, 1, 0, -2.78142e-07, 0, -1, 0, 0, 0 )

[node name="map" type="Spatial" parent="Spatial"]

[node name="console" parent="Spatial/map" instance=ExtResource( 1 )]
transform = Transform( -8.74228e-09, 0, -0.2, 0, 0.2, 0, 0.2, 0, -8.74228e-09, -0.72, -0.366, -4 )

[node name="tv" parent="Spatial/map" instance=ExtResource( 2 )]
transform = Transform( 0.666, 0, 0, 0, 0.5, 0, 0, 0, 0.33, -0.19, 0.054, -4.6 )

[node name="Sprite3D" type="MeshInstance" parent="Spatial/map/tv" groups=[
"SCREEN",
]]
transform = Transform( -1, -3.82137e-15, -8.74228e-08, -8.74228e-08, 4.37114e-08, 1, 0, 1, -4.37114e-08, 0, 0, 0.953571 )
material_override = SubResource( 22 )
mesh = SubResource( 23 )
material/0 = null

[node name="table" parent="Spatial/map" instance=ExtResource( 3 )]
transform = Transform( 0.75, 0, 0, 0, 0.75, 0, 0, 0, 0.75, -0.2, -1.2, -4.5 )

[node name="sofa" parent="Spatial/map" instance=ExtResource( 5 )]
transform = Transform( -0.75, 0, -6.55671e-08, 0, 0.75, 0, 6.55671e-08, 0, -0.75, -0.1, -0.9, -2.4 )

[node name="frame" parent="Spatial/map" instance=ExtResource( 7 )]
transform = Transform( -1.09278e-08, 0, 0.678, 0, 0.76, 0, -0.25, 0, -2.96363e-08, -0.3, 2.12, -5.5 )

[node name="Sprite3D" type="Sprite3D" parent="Spatial/map/frame"]
transform = Transform( -4.37114e-08, 0, -1, 0, 1.31579, 0, 1.47493, 0, -6.44711e-08, -0.110001, 0, -8.9407e-08 )
pixel_size = 0.0088
texture = ExtResource( 6 )

[node name="frame2" parent="Spatial/map" instance=ExtResource( 7 )]
transform = Transform( 0.25, 0, 0, 0, 0.55, 0, 0, 0, 0.678, 2.98, 1.12, -4.08 )

[node name="Sprite3D" type="Sprite3D" parent="Spatial/map/frame2"]
transform = Transform( 4.22788e-08, 0, -1, 0, 0.85, 0, 0.56, 0, 7.54979e-08, -0.110001, -0.0131578, 0 )
pixel_size = 0.005
texture = ExtResource( 8 )

[node name="frame3" parent="Spatial/map" instance=ExtResource( 7 )]
transform = Transform( -0.25, 0, -5.92726e-08, 0, 0.76, 0, 2.18557e-08, 0, -0.678, -2.97, 1.12, -1.68 )

[node name="Sprite3D" type="Sprite3D" parent="Spatial/map/frame3"]
transform = Transform( 8.28967e-08, 0, -1, 0, 1.462, 0, 1.098, 0, 7.54979e-08, -0.110001, 0, -8.9407e-08 )
texture = ExtResource( 9 )

[node name="frame4" parent="Spatial/map" instance=ExtResource( 7 )]
transform = Transform( -1.09278e-08, 0, 0.678, 0, 0.76, 0, -0.25, 0, -2.96363e-08, -2, 1.12, -5.49 )

[node name="Sprite3D" type="Sprite3D" parent="Spatial/map/frame4"]
transform = Transform( 5.66234e-08, 0, -1, 0, 0.75, 0, 0.75, 0, 7.54979e-08, -0.110001, 0, -8.9407e-08 )
pixel_size = 0.005
texture = ExtResource( 10 )

[node name="shelf" parent="Spatial/map" instance=ExtResource( 16 )]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 2, 0, 0.83 )

[node name="shelf2" parent="Spatial/map" instance=ExtResource( 16 )]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 2, 1.9, 0.83 )

[node name="room" parent="Spatial/map" instance=ExtResource( 17 )]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 2, -2.5 )

[node name="light" type="OmniLight" parent="Spatial/map"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 20.3, -3 )
light_bake_mode = 2
omni_range = 4096.0

[connection signal="button_pressed" from="Spatial/ARVROrigin/RController" to="Spatial/ARVROrigin/RController" method="_on_RController_button_pressed"]
[connection signal="button_release" from="Spatial/ARVROrigin/RController" to="Spatial/ARVROrigin/RController" method="_on_RController_button_release"]
[connection signal="button_pressed" from="Spatial/ARVROrigin/LController" to="Spatial/ARVROrigin/LController" method="_on_LController_button_pressed"]
[connection signal="button_release" from="Spatial/ARVROrigin/LController" to="Spatial/ARVROrigin/LController" method="_on_LController_button_release"]
