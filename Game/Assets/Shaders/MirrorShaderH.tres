[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=2]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 2, 0 ) ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=3]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVec3Uniform" id=4]
uniform_name = "RectScale"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -1, -1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "Alpha"

[sub_resource type="VisualShaderNodeTexture" id=7]
output_port_for_preview = 0
source = 1

[sub_resource type="VisualShaderNodeInput" id=8]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( -1, -2, 0 ), 1, Vector3( 0, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=10]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0 ) ]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_disabled, unshaded;

uniform vec3 RectScale;
uniform float Alpha;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorOp:9
	vec3 n_in9p1 = vec3(1.00000, 0.00000, 0.00000);
	vec3 n_out9p0 = n_out4p0 * n_in9p1;

// VectorUniform:20
	vec3 n_out20p0 = RectScale;

// VectorOp:21
	vec3 n_in21p1 = vec3(-1.00000, -1.00000, 0.00000);
	vec3 n_out21p0 = n_out20p0 * n_in21p1;

// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// VectorOp:6
	vec3 n_out6p0 = n_out21p0 * n_out2p0;

// VectorOp:10
	vec3 n_out10p0 = n_out9p0 - n_out6p0;

// VectorOp:19
	vec3 n_out19p0 = n_out10p0 / n_out20p0;

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out19p0.xy, 0.0);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// ScalarUniform:22
	float n_out22p0 = Alpha;

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out22p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -332.722, -89.1111 )
mode = 1
modes/blend = 5
flags/light_only = false
flags/unshaded = true
nodes/fragment/0/position = Vector2( 1160, 120 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -460, 140 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 760, 100 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -440, -40 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( -120, 140 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -100, -60 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 160, 60 )
nodes/fragment/19/node = SubResource( 2 )
nodes/fragment/19/position = Vector2( 470.882, 156 )
nodes/fragment/20/node = SubResource( 4 )
nodes/fragment/20/position = Vector2( -460, 340 )
nodes/fragment/21/node = SubResource( 5 )
nodes/fragment/21/position = Vector2( -260, 280 )
nodes/fragment/22/node = SubResource( 6 )
nodes/fragment/22/position = Vector2( -180, 400 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 6, 0, 10, 1, 10, 0, 19, 0, 19, 0, 3, 0, 20, 0, 19, 1, 20, 0, 21, 0, 21, 0, 6, 0, 2, 0, 6, 1, 22, 0, 0, 1, 4, 0, 9, 0, 9, 0, 10, 0 )
